worker_processes auto;
worker_rlimit_nofile 8192;

events {
  worker_connections 8000;
}

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

http {
  # Hide nginx version
  server_tokens off;

  # mime types
  include mime.types;
  default_type application/octet-stream;

  # Update charset_types due to updated mime.types
  charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

  # Format to use in log files
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;

  keepalive_timeout 20;
  sendfile          on;
  tcp_nopush        on;

  # gzip resources
  gzip on;
  gzip_comp_level    5;
  gzip_min_length    256;
  gzip_proxied       any;
  gzip_vary          on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  # Cache
  open_file_cache          max=1000 inactive=20s;
  open_file_cache_valid    30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors   on;

  proxy_cache_path  /tmp/cache/gcs levels=1:2 keys_zone=GCS_Cache:10m max_size=250m inactive=24h;
  proxy_cache_path /tmp/cache/api levels=1:2 keys_zone=API_CACHE:10m max_size=250m inactive=24h;
  proxy_temp_path   /tmp/cache/temp;

  # ShortUrl API
  upstream node {
    server api:${API_PORT};
  }

  server {
    listen [::]:80;
    listen 80;

    server_name _;

    charset utf-8;

    # Resolver
    resolver         8.8.8.8 valid=300s;
    resolver_timeout 10s;

    # Custom error page
    error_page 400 404 500 502 503 504 /error.html;

    location = /error.html {
      root /usr/share/nginx/html;
      internal;
    }

    # static files, reverse proxy our GCS bucket
    location / {
      # rewrite url
      rewrite ^(.*)/$ $1/index.html last;

      proxy_pass ${FRONT_ADDR};

      proxy_http_version 1.1;

      # cookies not required
      proxy_hide_header Set-Cookie;
      proxy_ignore_headers "Set-Cookie";

      # hide GCS headers
      proxy_hide_header x-goog-generation;
      proxy_hide_header x-goog-hash;
      proxy_hide_header x-goog-metageneration;
      proxy_hide_header x-goog-storage-class;
      proxy_hide_header x-goog-stored-content-encoding;
      proxy_hide_header x-goog-stored-content-length;
      proxy_hide_header x-guploader-uploadid;

      # don't expose GCS error messages to client
      proxy_intercept_errors on;

      # hide etags coming from GCS
      proxy_hide_header ETag;
      etag off;

      # cache resources
      proxy_buffering on;
      proxy_cache GCS_Cache;
      proxy_cache_valid 200 302 304 60m;
      proxy_cache_valid 404 1m;
      proxy_cache_revalidate on;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_lock on;

      add_header X-Cache-Status $upstream_cache_status;
    }

    # route requests to /s/ to /api/
    location /s/ {
      rewrite ^/s(/.*)$ /api$1 last;
    }

    # reverse proxy for our ShortUrl API
    location /api/ {
      rewrite ^/api(/.*)$ $1 break;
      proxy_pass http://node;

      # cache api requestszz
      proxy_buffering on;
      proxy_cache API_CACHE;
      proxy_cache_valid 200 302 304 60m;
      proxy_cache_valid 404 1m;
      proxy_cache_revalidate on;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_lock on;

      # Intercept errors
      proxy_intercept_errors on;

      add_header X-Cache-Status $upstream_cache_status;
    }
  }
}
